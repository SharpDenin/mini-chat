version: '3.8'

services:
  profile-db:
    image: postgres:16.1
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: profile_service_db
    ports:
      - "5460:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d profile_service_db"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - haxer-net
    volumes:
      - profile-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  profile-service:
    build: profile_service
    environment:
      PROFILE_HTTP_PORT: "8082"
      PROFILE_DB_URL: "postgres://postgres:postgres@profile-db:5432/profile_service_db"
    ports:
      - "8082:8082"
      - "50051:50051"
    depends_on:
      profile-db:
        condition: service_healthy
    networks:
      - haxer-net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - haxer-net
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 10

  mongo:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - haxer-net
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 10

  chat-db:
    image: postgres:16.1
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: chat_service_db
    ports:
      - "5461:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d chat_service_db"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - haxer-net
    volumes:
      - chat-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  chat-service:
    build: ./chat_service
    environment:
      PROFILE_SERVICE_ADDR: "profile_service:50051"
      CHAT_HTTP_PORT: "8081"
      CHAT_DB_URL: "postgres://postgres:postgres@chat-db:5432/chat_service_db"
    ports:
      - "8081:8081"
    depends_on:
      chat-db:
        condition: service_healthy
      profile-service:
        condition: service_started
    networks:
      - haxer-net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  haxer-net:
    driver: bridge

volumes:
  profile-db-data:
  chat-db-data:
  redis-data:
  mongo-data: